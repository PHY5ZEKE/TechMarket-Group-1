@model Product
<link rel="stylesheet" href="~/css/listing.css">
<!-- Include jQuery and the unobtrusive validation library -->
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/jquery.validation.unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>


<div class="primary_main">
    <div class="listing_main">
        <h1 class="text-center">Product Listing</h1>
        <div class="listing_prim"></div>
        <form asp-action="AddProduct" enctype="multipart/form-data" method="post" onsubmit="return validateForm()">
            <div class="listing_left">
                <div class="form-group">
                    <h5 class="fw-bolder">Upload Files</h5>
                    <p>Add a photo of your product</p>
                    <label asp-for="ProdImage" class="control-label">
                        <svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" fill="currentColor"
                             class="bi bi-card-image" viewBox="0 0 16 16">
                            <path d="M6.002 5.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                            <path d="M1.5 2A1.5 1.5 0 0 0 0 3.5v9A1.5 1.5 0 0 0 1.5 14h13a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 2h-13zm13 1a.5.5 0 0 1 .5.5v6l-3.775-1.947a.5.5 0 0 0-.577.093l-3.71 3.71-2.66-1.772a.5.5 0 0 0-.63.062L1.002 12v.54A.505.505 0 0 1 1 12.5v-9a.5.5 0 0 1 .5-.5h13z" />
                        </svg>
                        <p>Drag and drop files here<br />-OR- <br /></p>
                        <input asp-for="ProdImage" id="file" class="form-control" />
                        <span asp-validation-for="ProdImage" class="text-danger"></span>
                    </label>
                </div>
            </div>
            <div class="listing_right">
                <div class="form-group">
                    <label asp-for="ProdName">Product Name</label>
                    <input asp-for="ProdName" class="form-control" />
                    <span asp-validation-for="ProdName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ProdDesc">Description</label>
                    <input asp-for="ProdDesc" class="form-control" />
                    <span asp-validation-for="ProdDesc" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ProdTags">Category</label>
                    <select asp-for="ProdTags" asp-items="Html.GetEnumSelectList(typeof(ProdTags))"
                            class="form-control">
                        <option disabled selected>Select Tag</option>
                    </select>
                    <span asp-validation-for="ProdTags" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ProdPrice">Price</label>
                    <input asp-for="ProdPrice" class="form-control" />
                    <span asp-validation-for="ProdPrice" class="text-danger"></span>
                </div>

                <br />
                <button type="submit" class="submit_button">Submit</button>
                <button class="cancel_button" type="button" onclick="history.back()">Cancel</button>
            </div>
        </form>
    </div>
</div>
<script>
    function validateForm() {
        // Get form values
        var prodName = document.getElementById('ProdName').value;
        var prodDesc = document.getElementById('ProdDesc').value;
        var prodTags = document.getElementById('ProdTags').value;
        var prodPrice = document.getElementById('ProdPrice').value;
        var prodImage = document.getElementById('file').value;

        // Validate Product Name
        if (prodName.trim() === '') {
            showError('Product Name is required.');
            return false;
        }
        if (prodName.length > 60) {
            showError('Product Name cannot exceed 60 characters.');
            return false;
        }

        // Validate Product Description
        if (prodDesc.trim() === '') {
            showError('Product Description is required.');
            return false;
        }
        if (prodDesc.length > 150) {
            showError('Product Description cannot exceed 150 characters.');
            return false;
        }

        // Validate Product Category
        if (prodTags.trim() === '') {
            showError('Product Category is required.');
            return false;
        }

        // Validate Product Price
        if (prodPrice.trim() === '') {
            showError('Product Price is required.');
            return false;
        }
        var parsedPrice = parseInt(prodPrice, 10);
        if (isNaN(parsedPrice) || parsedPrice < 50 || parsedPrice > 999999) {
            showError('Product Price must be a valid integer between 50 and 999999.');
            return false;
        }

        // Validate Product Image
        if (prodImage.trim() === '') {
            showError('Product Image is required.');
            return false;
        }
        var allowedExtensions = ['.jpg', '.jpeg', '.png', '.gif'];
        var extension = prodImage.substring(prodImage.lastIndexOf('.')).toLowerCase();
        if (!allowedExtensions.includes(extension)) {
            showError('Allowed file extensions are: ' + allowedExtensions.join(', '));
            return false;
        }

        // If all validations pass, return true to submit the form
        return true;
    }

    function showError(message) {
        Swal.fire({
            icon: 'error',
            title: 'Oops...',
            text: message,
            confirmButtonColor: '#d33',
            confirmButtonText: 'OK'
        });
    }
</script>
